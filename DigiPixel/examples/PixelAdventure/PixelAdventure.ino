#include <DigiPixel.h>
#include <avr/pgmspace.h>

// leave the following line uncommented for use with a Digispark
//DigiPixel digiPixel(3,0,5,2,1);  // LED Latch/Button Shift !load pin, LED/Button clock pin, LED Data Pin, LED Output Enable pin, Buttons data pin)

// leave the following line uncommented for use with an Arduino
DigiPixel digiPixel(5,2,6,4,3);  // LED Latch/Button Shift !load pin, LED/Button clock pin, LED Data Pin, LED Output Enable pin, Buttons data pin)


// Program memory arrays
long Level1Red[64]PROGMEM={0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000110000000000000000000, 0b00000000000011000000000000000000, 0b00000000000001000000000000000000, 0b00000000000001000000000000000000, 0b00000000010001100000000000000000, 0b00000000010000110000000000000000, 0b00000000110000011000000000100000, 0b00000000100000001100000000100000, 0b00000001100000000100000001100000, 0b00000001000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000010000100100000000, 0b00000000000000000000000100000000, 0b00000000001000000000000100000000, 0b00000000001000000010000100000000, 0b00000000001100000000000100000000, 0b00000000000110000000000000000000, 0b00000000000010000000000000000000, 0b00000000000010000000000001000000, 0b00000000000011000111000001000000, 0b00000000000000000001000001000000, 0b00000000000000000001000001000000, 0b00000000000000010001100000000000, 0b00000000000000010000100000000000, 0b00000000000000010000100000000000, 0b00000000000000010000100000000000, 0b00000000000000010001100000000000, 0b00000000000000010011000000000000, 0b00000000000000000010000000000000, 0b00000000000000000110000000000000, 0b00000000000000001000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000001000000000000000000, 0b00000000000001100000000000000000, 0b00000000000000110000000000000000, 0b00000000000000010000000000000000, 0b00000000000000010000000000000000, 0b00000000000000110000000000000000, 0b00000000000000100000000000000000, 0b00000000000001100000000000000000, 0b00000000000011000000000000000000, 0b00000000000010000000001000000000, 0b00000000000000000000001000000000, 0b00000000000000000000001000000000, 0b00000000000000000000001000000000, 0b00000011000000001000001001000000, 0b00000001100000000000001001000000, 0b00000000110000000000001001000000, 0b00000000011000010010000001000000, 0b00000000001000110000000001000000, 0b00000000001000100000000001000000, 0b00000000000000100000100000000000, 0b00000000000001100000000000000000, 0b00000000000011000000000000000000, 0b00000000000111000000000100000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000};
long Level1Green[64]PROGMEM={0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11100000000000000000000000001111, 0b11100000000000000000000010001111, 0b11100000000000000000000010001111, 0b11100000000000000000000010001111, 0b11100000000000000000100000001111, 0b11100000000000000000100000001111, 0b11100000000000000000100000001111, 0b11100000000000000000100000001111, 0b11100000000010000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100100000000000000000000001111, 0b11100100100000000000000000001111, 0b11100100000000000000000000001111, 0b11100100000000000000000000001111, 0b11100100000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100010000000000000000000001111, 0b11100010000100000000000000001111, 0b11100010000100000000000000001111, 0b11100010000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000100000000000000001001111, 0b11100000100000000000000000001111, 0b11100100100000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000000000000000001111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111};
long Level1Blue[64]PROGMEM={0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000100000000000000000000000000, 0b00000100000000000000000000000000, 0b00000100000000000000000000000000, 0b00000100000000000000000000000000, 0b00000100000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000011000000000000000000000000, 0b00000001000000000000000000000000, 0b00000001000000000000000000000000, 0b00000000100000000111000000000000, 0b00000000100000000001000000000000, 0b00000000000000000001000000000000, 0b00000000000000000001100000000000, 0b00000000000100000000100000000000, 0b00000000100100000000100000000000, 0b00000000000100000000100000000000, 0b00000000000100000001100001000000, 0b00000000000100000011000011000000, 0b00000000000100000010000110000000, 0b00000000000100000110000100000000, 0b00000000000100001000001100000000, 0b00000000001000000000011000000000, 0b00000000011000000000011000000000, 0b00000000010000000000001100000000, 0b00000000000000000000000110000000, 0b00000000000000000000000010000000, 0b00000000000000000000000010000000, 0b00000000000000000000110011000000, 0b00000000000000000000100001000000, 0b00000000000000000001100000000000, 0b00000000000000000001000000000000, 0b00000000000000000011000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000001000000000, 0b00000000000000000000001000000000, 0b00000000000000000000001000000000, 0b00000000000000000000001000000000, 0b00000000000000001000001001000000, 0b00000000000000000000001001000000, 0b00000000000000000000001001000000, 0b00000000000000000010000001000000, 0b00000000000000000000000001000000, 0b00000000000000000000000001000000, 0b00000000000000000000100000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000100000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000};
long Level1Barriers[64]PROGMEM={0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11100000000110000000000000001111, 0b11100100000011000000000010001111, 0b11100100000001000000000010001111, 0b11100100000001000000000010001111, 0b11100100010001100000100000001111, 0b11100100010000110000100000001111, 0b11100000110000011000100000101111, 0b11100000100000001100100000101111, 0b11100001100010000100000001101111, 0b11100001000000000000000000001111, 0b11100000000000000000000000001111, 0b11100000000000010000100100001111, 0b11100000000000000000000100001111, 0b11100000001000000000000100001111, 0b11100000001000000010000100001111, 0b11100000001100000000000100001111, 0b11100011000110000000000000001111, 0b11100001000010000000000000001111, 0b11100001000010000000000001001111, 0b11100000100011000111000001001111, 0b11100000100000000001000001001111, 0b11100000000000000001000001001111, 0b11100000000000010001100000001111, 0b11100000000100010000100000001111, 0b11100000100100010000100000001111, 0b11100000000100010000100000001111, 0b11100000000100010001100001001111, 0b11100000000100010011000011001111, 0b11100100000100000010000110001111, 0b11100100100100000110000100001111, 0b11100100000100001000001100001111, 0b11100100001000000000011000001111, 0b11100100011000000000011000001111, 0b11100000010000000000001100001111, 0b11100000000001000000000110001111, 0b11100000000001100000000010001111, 0b11100010000000110000000010001111, 0b11100010000100010000110011001111, 0b11100010000100010000100001001111, 0b11100010000000110001100000001111, 0b11100000000000100001000000001111, 0b11100000000001100011000000001111, 0b11100000100011000000000001001111, 0b11100000100010000000001000001111, 0b11100100100000000000001000001111, 0b11100000000000000000001000001111, 0b11100000000000000000001000001111, 0b11100011000000001000001001001111, 0b11100001100000000000001001001111, 0b11100000110000000000001001001111, 0b11100000011000010010000001001111, 0b11100000001000110000000001001111, 0b11100000001000100000000001001111, 0b11100000000000100000100000001111, 0b11100000000001100000000000001111, 0b11100000000011000000000000001111, 0b11100000000111000000000100001111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111, 0b11111111111111111111111111111111};


// Constants
#define MaxJumpHeight 3


// Variables
byte PlayerX = 4;
byte PlayerY = 4;
byte PlayerColor = 1;
byte ScreenXOffset = 0;
byte ScreenYOffset = 25;
byte ButtonDelay = 10;
byte ButtonDelaySave = 7;
long TempLong = 0;

byte JumpSpeed = 4;
byte JumpHeight = 0;
byte HoverDelay = 0;
boolean IsJumping = false;
boolean IsHovering = false;
boolean IsFalling = true;


void setup(){
  
}


void loop(){  
  digiPixel.saveButtonStates();  
  digiPixel.drawScreen();
  MoveGameArea();
  SaveGraphics();
}

void MoveGameArea(){  
  if (digiPixel.buttonAPressed & ScreenYOffset < 24 & digiPixel.checkBarrier(PlayerX, (PlayerY + 1)) == false & IsFalling == false & IsJumping == false & IsHovering == false){
    IsJumping = true; 
    JumpHeight = 0;     
  }
  
  if (IsJumping == true){
    if (JumpSpeed != 0){
     JumpSpeed--;
    }
    else{
      if (JumpHeight == MaxJumpHeight | digiPixel.checkBarrier(PlayerX, (PlayerY + 1)) == true){
        IsJumping = false;
        IsHovering = true;
        HoverDelay = 3;
      }
      else{
        JumpSpeed = 4;
        JumpHeight++;
        ScreenYOffset++;
      } 
    }
  }
   
  if (IsHovering == true){
    if (JumpSpeed != 0){
     JumpSpeed--;
    }
    else{
      JumpSpeed = 4;
      HoverDelay--;
      if (HoverDelay == 0){
        IsHovering = false;
        IsFalling = true; 
      }
    } 
  }
  
  if (digiPixel.checkBarrier(PlayerX, (PlayerY - 1)) == true){
     IsFalling = false;  
  }
  else{
    if (IsJumping == false & IsHovering == false){  
      IsFalling = true; 
    }
    if (IsFalling == true){  
      if (JumpSpeed != 0){
        JumpSpeed--;
      }
      else{
        JumpSpeed = 4;
        ScreenYOffset--;
      }
    }
  }
  
  if (ButtonDelay != 0){
    ButtonDelay--;
  }
  else{
    ButtonDelay = ButtonDelaySave;
    if (digiPixel.buttonLeftPressed & ScreenXOffset > 0 & digiPixel.checkBarrier((PlayerX - 1), PlayerY) == false){
      ScreenXOffset--; 
    }
    if (digiPixel.buttonRightPressed & ScreenXOffset < ((sizeof(Level1Barriers) / 4) - 8) & digiPixel.checkBarrier((PlayerX + 1), PlayerY) == false){ 
      ScreenXOffset++; 
    }
  }
}

void SaveGraphics(){
  for (byte x = 0; x <= 7; x++){
    digiPixel.bufferRed[x] = pgm_read_dword(&Level1Red[x + ScreenXOffset]) >> ScreenYOffset;
    digiPixel.bufferGreen[x] = pgm_read_dword(&Level1Green[x + ScreenXOffset]) >> ScreenYOffset;
    digiPixel.bufferBlue[x] = pgm_read_dword(&Level1Blue[x + ScreenXOffset]) >> ScreenYOffset;
    digiPixel.bufferBarriers[x] = pgm_read_dword(&Level1Barriers[x + ScreenXOffset]) >> ScreenYOffset;
  }
  digiPixel.setPixel(PlayerX, PlayerY, PlayerColor);
}





